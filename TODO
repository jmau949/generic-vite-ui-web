- Use Secure Cookies for Session Management: Ensure that your cookies are flagged as HttpOnly and Secure to prevent access from JavaScript and ensure they're only transmitted over HTTPS.
  -- HTTP Security Headers: Make sure your production server (e.g., Nginx, Apache, or Node.js) adds headers like Content-Security-Policy (CSP), Strict-Transport-Security (HSTS), and X-Frame-Options for added security.

- consider storing tokens in httpOnly secure cookies.

CSRF Protection: Since sessions typically use cookies, implement CSRF protection on the server. You can send a CSRF token along with each request from the client.
Secure Cookies: Ensure your session cookies are set with the HttpOnly, Secure, and SameSite flags to prevent access from JavaScript and to mitigate cross-site attacks.

HttpOnly Cookies: Ensure cookies are not accessible via JavaScript by setting the HttpOnly flag on the server-side, typically when the token is issued.

all done except
@fastify/csrf-protection

is this needed?
